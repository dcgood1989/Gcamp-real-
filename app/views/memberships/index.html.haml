.container
  .page-header
    %h1 #{@project.name}: Manage Members
  %ol.breadcrumb
    %li
      =link_to "Projects", projects_path
    %li
      =link_to "#{@project.name}", project_path(@project)
    %li.active Memberships

  .row
    .col-md-7
      -if @membership.errors.any?
        .alert.alert-danger
          .h3
            =pluralize(@membership.errors.count, "error")
            ="prohibited this from from being saved:"
          -@membership.errors.full_messages.each do |message|
            %ul
              %li
                = message

        - if current_user.membership_owner(@project)
          .row
            .col-md-7
              = form_for [@project, @membership], html: { class: "form-inline"} do |f|
                .well
                  .form-group
                    = f.collection_select :user_id, User.all, :id, :full_name, {prompt: "Please select a user.."}, {class: "form-control"}
                  .form-group
                    = f.select(:roles, [["Member", 1], ["Owner", 2]], {}, {class: 'form-control'})
                  .form-group
                    = f.submit "Add New Member", {class: "btn btn-primary"}
      .row
        .col-md-7
          %table.table
            %tbody
              - @project.memberships.each do |membership|
                - if membership.id.present? && membership.id.present?
                  %tr
                    = form_for [@project, membership], html: {class: "form-inline"} do |f|
                      %td
                        = link_to membership.user.full_name, user_path(membership.user)
                      %td
                        = f.select(:roles, [["Member", 1], ["Owner", 2]], {}, {class: 'form-control'})
                      - if current_user.membership_owner(@project)
                        %td
                          = f.submit "update", {class: "btn btn-primary"}
                        %td
                          = link_to ' ', project_membership_path(@project, membership), method: :delete, class: "glyphicon glyphicon-remove"
